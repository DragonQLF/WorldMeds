{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nandi\\\\Desktop\\\\WorldMeds\\\\frontend\\\\src\\\\components\\\\WorldMap.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ComposableMap, Geographies, Geography } from 'react-simple-maps';\nimport { scaleLinear } from 'd3-scale';\nimport axios from 'axios';\nimport styled from 'styled-components';\n\n// Styled components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 500px;\n  margin: 2rem 0;\n`;\n_c = MapContainer;\nconst TooltipBox = styled.div`\n  position: absolute;\n  top: 1rem;\n  left: 1rem;\n  background: white;\n  padding: 0.5rem 1rem;\n  border-radius: 4px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\n  z-index: 100;\n  min-width: 160px;\n`;\n_c2 = TooltipBox;\nconst WorldMap = () => {\n  _s();\n  const [tooltip, setTooltip] = useState(null);\n  const [priceData, setPriceData] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`${process.env.REACT_APP_API_URL}/api/countries`);\n        const data = response.data.reduce((acc, country) => ({\n          ...acc,\n          [country.nome]: country.avg_price\n        }), {});\n        setPriceData(data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  const colorScale = scaleLinear().domain([0, 50, 100]).range(['#e6f3ff', '#66a3ff', '#0047b3']);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading map data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error loading map: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    children: [/*#__PURE__*/_jsxDEV(ComposableMap, {\n      projection: \"geoMercator\",\n      children: /*#__PURE__*/_jsxDEV(Geographies, {\n        geography: \"/features.json\",\n        children: ({\n          geographies\n        }) => geographies.map(geo => {\n          const countryName = geo.properties.NAME || geo.properties.name;\n          const price = priceData[countryName] || 0;\n          return /*#__PURE__*/_jsxDEV(Geography, {\n            geography: geo,\n            fill: colorScale(price),\n            stroke: \"#FFFFFF\",\n            strokeWidth: 0.5,\n            onMouseEnter: () => setTooltip({\n              name: countryName,\n              price: price || 'N/A'\n            }),\n            onMouseLeave: () => setTooltip(null),\n            style: {\n              default: {\n                outline: 'none'\n              },\n              hover: {\n                fill: '#FF5722',\n                outline: 'none'\n              },\n              pressed: {\n                outline: 'none'\n              }\n            }\n          }, geo.rsmKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), tooltip && /*#__PURE__*/_jsxDEV(TooltipBox, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: tooltip.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Average Price: \", typeof tooltip.price === 'number' ? `$${tooltip.price.toFixed(2)}` : tooltip.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(WorldMap, \"nsGZDjQBibKRkSjVa3FCsqBYP8A=\");\n_c3 = WorldMap;\nexport default WorldMap;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"MapContainer\");\n$RefreshReg$(_c2, \"TooltipBox\");\n$RefreshReg$(_c3, \"WorldMap\");","map":{"version":3,"names":["React","useState","useEffect","ComposableMap","Geographies","Geography","scaleLinear","axios","styled","jsxDEV","_jsxDEV","MapContainer","div","_c","TooltipBox","_c2","WorldMap","_s","tooltip","setTooltip","priceData","setPriceData","loading","setLoading","error","setError","fetchData","response","get","process","env","REACT_APP_API_URL","data","reduce","acc","country","nome","avg_price","err","message","colorScale","domain","range","children","fileName","_jsxFileName","lineNumber","columnNumber","projection","geography","geographies","map","geo","countryName","properties","NAME","name","price","fill","stroke","strokeWidth","onMouseEnter","onMouseLeave","style","default","outline","hover","pressed","rsmKey","toFixed","_c3","$RefreshReg$"],"sources":["C:/Users/nandi/Desktop/WorldMeds/frontend/src/components/WorldMap.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ComposableMap, Geographies, Geography } from 'react-simple-maps';\r\nimport { scaleLinear } from 'd3-scale';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\n\r\n// Styled components\r\nconst MapContainer = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 500px;\r\n  margin: 2rem 0;\r\n`;\r\n\r\nconst TooltipBox = styled.div`\r\n  position: absolute;\r\n  top: 1rem;\r\n  left: 1rem;\r\n  background: white;\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 4px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\r\n  z-index: 100;\r\n  min-width: 160px;\r\n`;\r\n\r\nconst WorldMap = () => {\r\n  const [tooltip, setTooltip] = useState(null);\r\n  const [priceData, setPriceData] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(`${process.env.REACT_APP_API_URL}/api/countries`);\r\n        const data = response.data.reduce((acc, country) => ({\r\n          ...acc,\r\n          [country.nome]: country.avg_price\r\n        }), {});\r\n        setPriceData(data);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const colorScale = scaleLinear()\r\n    .domain([0, 50, 100])\r\n    .range(['#e6f3ff', '#66a3ff', '#0047b3']);\r\n\r\n  if (loading) return <div>Loading map data...</div>;\r\n  if (error) return <div>Error loading map: {error}</div>;\r\n\r\n  return (\r\n    <MapContainer>\r\n      <ComposableMap projection=\"geoMercator\">\r\n        <Geographies geography=\"/features.json\">\r\n          {({ geographies }) =>\r\n            geographies.map(geo => {\r\n              const countryName = geo.properties.NAME || geo.properties.name;\r\n              const price = priceData[countryName] || 0;\r\n              \r\n              return (\r\n                <Geography\r\n                  key={geo.rsmKey}\r\n                  geography={geo}\r\n                  fill={colorScale(price)}\r\n                  stroke=\"#FFFFFF\"\r\n                  strokeWidth={0.5}\r\n                  onMouseEnter={() => setTooltip({\r\n                    name: countryName,\r\n                    price: price || 'N/A'\r\n                  })}\r\n                  onMouseLeave={() => setTooltip(null)}\r\n                  style={{\r\n                    default: { outline: 'none' },\r\n                    hover: { fill: '#FF5722', outline: 'none' },\r\n                    pressed: { outline: 'none' }\r\n                  }}\r\n                />\r\n              );\r\n            })\r\n          }\r\n        </Geographies>\r\n      </ComposableMap>\r\n\r\n      {tooltip && (\r\n        <TooltipBox>\r\n          <h4>{tooltip.name}</h4>\r\n          <p>Average Price: {typeof tooltip.price === 'number' \r\n              ? `$${tooltip.price.toFixed(2)}` \r\n              : tooltip.price}\r\n          </p>\r\n        </TooltipBox>\r\n      )}\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default WorldMap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}